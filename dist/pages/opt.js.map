{
  "version": 3,
  "sources": ["../../bin/live-reload.js", "../../src/js/pages/opt.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener(\"change\", () =>\n   location.reload(),\n);\n", "import \"../../css/pages/opt.css\";\n\n/*********************************/\n/* Helper for counting up from 0 */\n/*********************************/\n\nfunction timeCounter() {\n   const elements = document.querySelectorAll<HTMLElement>(\n      \"[data-time-counter]\",\n   );\n   if (!elements.length) return;\n\n   const pad = (n: number) => String(n).padStart(2, \"0\");\n\n   const parseDMY = (dmy: string): Date | null => {\n      const parts = dmy.split(\"/\").map((v) => Number(v));\n      if (parts.length !== 3) return null;\n      const [dd, mm, yyyy] = parts;\n      if (!dd || !mm || !yyyy) return null;\n      const date = new Date(yyyy, mm - 1, dd, 0, 0, 0, 0);\n      if (\n         date.getFullYear() !== yyyy ||\n         date.getMonth() !== mm - 1 ||\n         date.getDate() !== dd\n      )\n         return null;\n      return date;\n   };\n\n   elements.forEach((el) => {\n      const attr = el.getAttribute(\"data-time-counter\");\n      if (!attr) return;\n      const target = parseDMY(attr);\n      if (!target) {\n         console.warn(\n            \"[time-counter] Invalid date format, expected dd/mm/yyyy:\",\n            attr,\n         );\n         return;\n      }\n\n      const update = () => {\n         const now = new Date();\n         const diffMs = target.getTime() - now.getTime();\n\n         if (diffMs <= 0) {\n            el.textContent = \"00:00:00:00\";\n            clearInterval(timer);\n            return;\n         }\n\n         const totalSeconds = Math.floor(diffMs / 1000);\n         const days = Math.floor(totalSeconds / 86400);\n         const hours = Math.floor((totalSeconds % 86400) / 3600);\n         const minutes = Math.floor((totalSeconds % 3600) / 60);\n         const seconds = totalSeconds % 60;\n\n         el.textContent = `${days}:${pad(hours)}:${pad(minutes)}:${pad(seconds)}`;\n      };\n\n      update();\n      const timer = setInterval(update, 1000);\n\n      const observer = new MutationObserver(() => {\n         if (!document.body.contains(el)) {\n            clearInterval(timer);\n            observer.disconnect();\n         }\n      });\n      observer.observe(document.body, { childList: true, subtree: true });\n   });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n   timeCounter();\n});\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,uBAAY,UAAU,EAAE;AAAA,IAAiB;AAAA,IAAU,MACnE,SAAS,OAAO;AAAA,EACnB;;;ACIA,WAAS,cAAc;AACpB,UAAM,WAAW,SAAS;AAAA,MACvB;AAAA,IACH;AACA,QAAI,CAAC,SAAS,OAAQ;AAEtB,UAAM,MAAM,CAAC,MAAc,OAAO,CAAC,EAAE,SAAS,GAAG,GAAG;AAEpD,UAAM,WAAW,CAAC,QAA6B;AAC5C,YAAM,QAAQ,IAAI,MAAM,GAAG,EAAE,IAAI,CAAC,MAAM,OAAO,CAAC,CAAC;AACjD,UAAI,MAAM,WAAW,EAAG,QAAO;AAC/B,YAAM,CAAC,IAAI,IAAI,IAAI,IAAI;AACvB,UAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAM,QAAO;AAChC,YAAM,OAAO,IAAI,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC;AAClD,UACG,KAAK,YAAY,MAAM,QACvB,KAAK,SAAS,MAAM,KAAK,KACzB,KAAK,QAAQ,MAAM;AAEnB,eAAO;AACV,aAAO;AAAA,IACV;AAEA,aAAS,QAAQ,CAAC,OAAO;AACtB,YAAM,OAAO,GAAG,aAAa,mBAAmB;AAChD,UAAI,CAAC,KAAM;AACX,YAAM,SAAS,SAAS,IAAI;AAC5B,UAAI,CAAC,QAAQ;AACV,gBAAQ;AAAA,UACL;AAAA,UACA;AAAA,QACH;AACA;AAAA,MACH;AAEA,YAAM,SAAS,MAAM;AAClB,cAAM,MAAM,oBAAI,KAAK;AACrB,cAAM,SAAS,OAAO,QAAQ,IAAI,IAAI,QAAQ;AAE9C,YAAI,UAAU,GAAG;AACd,aAAG,cAAc;AACjB,wBAAc,KAAK;AACnB;AAAA,QACH;AAEA,cAAM,eAAe,KAAK,MAAM,SAAS,GAAI;AAC7C,cAAM,OAAO,KAAK,MAAM,eAAe,KAAK;AAC5C,cAAM,QAAQ,KAAK,MAAO,eAAe,QAAS,IAAI;AACtD,cAAM,UAAU,KAAK,MAAO,eAAe,OAAQ,EAAE;AACrD,cAAM,UAAU,eAAe;AAE/B,WAAG,cAAc,GAAG,IAAI,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC;AAAA,MACzE;AAEA,aAAO;AACP,YAAM,QAAQ,YAAY,QAAQ,GAAI;AAEtC,YAAM,WAAW,IAAI,iBAAiB,MAAM;AACzC,YAAI,CAAC,SAAS,KAAK,SAAS,EAAE,GAAG;AAC9B,wBAAc,KAAK;AACnB,mBAAS,WAAW;AAAA,QACvB;AAAA,MACH,CAAC;AACD,eAAS,QAAQ,SAAS,MAAM,EAAE,WAAW,MAAM,SAAS,KAAK,CAAC;AAAA,IACrE,CAAC;AAAA,EACJ;AAEA,WAAS,iBAAiB,oBAAoB,MAAM;AACjD,gBAAY;AAAA,EACf,CAAC;",
  "names": []
}
